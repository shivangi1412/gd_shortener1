# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.6
      - test-3.7
      - test-3.8
      - test-2.7
      - aarch-64

jobs:
  test-3.6: &test-template-python3
    docker:
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pip install nose
            nosetests

  test-2.7:
    docker:
      - image: circleci/python:2.7

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv .venv
            source .venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            source .venv/bin/activate
            pip install nose
            nosetests

  test-3.7:
      <<: *test-template-python3
      docker:
        - image: circleci/python:3.7.5
  test-3.8:
      <<: *test-template-python3
      docker:
        - image: circleci/python:3.8.0

  aarch-64:
    machine:
      image: ubuntu-2004:2022.04.1
    resource_class: arm.medium
    working_directory: ~/dash

    steps:
      - run: uname -a
      - checkout
      
      - run:
          name: requirement 
          command: |
            uname -m
            python3 -m venv venv
            . venv/bin/activate
            sudo apt install python3
            sudo apt-get install python3-pip
            python3 -m pip install --upgrade pip
            pip3 install tox
            python --version
            pwd
             
      - run:      
          name: test
          command: |
            pip3 install --upgrade requests
            python setup.py nosetests
            pip install nose
            pip3 install -r requirements.txt
            python3 setup.py install
            nosetests /home/circleci/dash
  
